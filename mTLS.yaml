---
- name: mTLS Playbook
  hosts: localhost

  tasks:
    - name: Create a configuration file for openSSL
      copy:
        dest: "$HOME/cert.cfg"
        content: |
           [ req ]
           req_extensions     = req_ext
           distinguished_name = req_distinguished_name
           prompt             = no \n
           [req_distinguished_name]
           commonName=console-openshift-console.apps.cluster-f711.f711.sandbox1563.opentlc.com \n
           [req_ext]
           subjectAltName   = @alt_names \n
           [alt_names]
           DNS.1  = console-openshift-console.apps.cluster-f711.f711.sandbox1563.opentlc.com
           DNS.2  = *.console-openshift-console.apps.cluster-f711.f711.sandbox1563.opentlc.com

    - name: Create a self-signed certificate and private key
      shell: openssl req -x509 -config cert.cfg -extensions req_ext -nodes -days 730 -newkey rsa:2048 -sha256 -keyout tls.key -out tls.crt
 
    - name: Create the secret in the Service Mesh control plane namespace with the certificates
      shell: oc create secret tls istio-ingressgateway-certs --cert tls.crt --key tls.key -n bookinfo-istio-system

    - name: Restart the Istio Ingress Gateway pod
      shell: oc patch deployment istio-ingressgateway -p '{"spec":{"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt": "'`date +%FT%T%z`'"}}}}}' -n bookinfo-istio-system

    - name: Defining the wildcard Gateway YAML file:
      copy:
        dest: "$HOME/wildcard-gateway.yml"
        content: |
           apiVersion: networking.istio.io/v1alpha3
           kind: Gateway
           metadata:
             name: erd-wildcard-gateway
           spec:
             selector:
                istio: ingressgateway # use istio default controller
             servers:
             - port:
                number: 443
                name: https
                protocol: HTTPS
              tls:
                mode: SIMPLE
                privateKey: /etc/istio/ingressgateway-certs/tls.key
                serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
              hosts:
              - \"*.console-openshift-console.apps.cluster-f711.f711.sandbox1563.opentlc.com\"

    - name: Create the wildcard Gateway
      shell: oc create -f wildcard-gateway.yml -n bookinfo-istio-system

    - name: Command based liveness and readiness probes
      shell: for POD_NAME in $(oc get pods -n bookinfo -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}')
             do
               oc patch dc $ERDEMO_USER-incident-service --type='json' -p '[{"op": "remove", "path": "/spec/template/spec/containers/0/livenessProbe/httpGet"}, {"op": "add", "path": "/spec/template/spec/containers/0/livenessProbe", "value": { "exec": { "command" : ["curl", "http://127.0.0.1:8080/actuator/health"]}, "initialDelaySeconds": 30, "timeoutSeconds": 3, "periodSeconds": 30, "successThreshold": 1, "failureThreshold": 3}}, {"op": "remove", "path": "/spec/template/spec/containers/0/readinessProbe/httpGet"}, {"op": "add", "path": "/spec/template/spec/containers/0/readinessProbe", "value": { "exec": { "command" : ["curl", "http://127.0.0.1:8080/actuator/health"]}, "initialDelaySeconds": 30, "timeoutSeconds": 3, "periodSeconds": 30, "successThreshold": 1, "failureThreshold": 3}}]' -n bookinfo
             done     