---
- name: mTLS Playbook
  hosts: localhost

  tasks:
    - name: Create a configuration file for openSSL
      copy:
        dest: "$HOME/cert.cfg"
        content: |
           [ req ]
           req_extensions     = req_ext
           distinguished_name = req_distinguished_name
           prompt             = no
           [req_distinguished_name]
           commonName=apps.cluster-08f8.08f8.sandbox744.opentlc.com
           [req_ext]
           subjectAltName   = @alt_names
           [alt_names]
           DNS.1  = apps.cluster-08f8.08f8.sandbox744.opentlc.com
           DNS.2  = *.apps.cluster-08f8.08f8.sandbox744.opentlc.com

    - name: Create a self-signed certificate and private key
      shell: openssl req -x509 -config cert.cfg -extensions req_ext -nodes -days 730 -newkey rsa:2048 -sha256 -keyout tls.key -out tls.crt
 
    - name: Create the secret in the Service Mesh control plane namespace with the certificates
      shell: oc create secret tls istio-ingressgateway-certs --cert tls.crt --key tls.key -n bookinfo-istio-system

    - name: Restart the Istio Ingress Gateway pod
#     shell: oc patch deployment istio-ingressgateway -p '{"spec":{"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt": "'`date +%FT%T%z`'"}}}}}' -n bookinfo-istio-system
#     shell: oc rollout latest deployment/istio-ingressgateway -n bookinfo-istio-system
      shell: "oc scale --replicas=0 deployment/istio-ingressgateway -n bookinfo-istio-system \n
sleep 30 \n
oc scale --replicas=1 deployment/istio-ingressgateway -n bookinfo-istio-system \n
sleep 30"

    - name: Defining the wildcard Gateway YAML file
      copy:
        dest: "$HOME/wildcard-gateway.yml"
        content: |
           ---
           apiVersion: networking.istio.io/v1alpha3
           kind: Gateway
           metadata:
             name: bookinfo-wildcard-gateway
           spec:
             selector:
                istio: ingressgateway # use istio default controller
             servers:
             - port:
                number: 443
                name: https
                protocol: HTTPS
               tls:
                mode: SIMPLE
                privateKey: /etc/istio/ingressgateway-certs/tls.key
                serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
               hosts:
               - "*"

    - name: Create the wildcard gateway
      shell: oc create -f wildcard-gateway.yml -n bookinfo-istio-system

    - name: Download the probesAndServices script from Git
      get_url:
        url: https://raw.githubusercontent.com/cesaraugustoo/RedHat-ServiceMeshHW/master/probesAndServices.sh
        dest: $HOME/probesAndServices.sh
        mode: '775'

    - name: Configuring probes and services
      shell: $HOME/probesAndServices.sh

    - name: Defining the mTLS rules file
      copy:
        dest: "$HOME/mtlsRules.yml"
        content: |
           apiVersion: networking.istio.io/v1alpha3
           kind: DestinationRule
           metadata:
             name: productpage
           spec:
             host: productpage
             trafficPolicy:
               tls:
                mode: ISTIO_MUTUAL
             subsets:
             - name: v1
               labels:
                 version: v1
           ---
           apiVersion: networking.istio.io/v1alpha3
           kind: DestinationRule
           metadata:
             name: reviews
           spec:
             host: reviews
             trafficPolicy:
               tls:
                mode: ISTIO_MUTUAL
             subsets:
             - name: v1
               labels:
                 version: v1
             - name: v2
               labels:
                 version: v2
             - name: v3
               labels:
                 version: v3
           ---
           apiVersion: networking.istio.io/v1alpha3
           kind: DestinationRule
           metadata:
             name: ratings
           spec:
             host: ratings
             trafficPolicy:
               tls:
                mode: ISTIO_MUTUAL
             subsets:
             - name: v1
               labels:
                 version: v1
             - name: v2
               labels:
                 version: v2
             - name: v2-mysql
               labels:
                 version: v2-mysql
             - name: v2-mysql-vm
               labels:
                 version: v2-mysql-vm
           ---
           apiVersion: networking.istio.io/v1alpha3
           kind: DestinationRule
           metadata:
             name: details
           spec:
             host: details
             trafficPolicy:
               tls:
                mode: ISTIO_MUTUAL
             subsets:
             - name: v1
               labels:
                 version: v1
             - name: v2
               labels:
                 version: v2
           ---

    - name: Create the destination rules
      shell: oc create -f mtlsRules.yml -n bookinfo

    - name: Defining the virtual service YAML file
      copy:
        dest: "$HOME/virtualService.yml"
        content: |
           apiVersion: networking.istio.io/v1alpha3
           kind: VirtualService
           metadata:
             name: bookinfo
           spec:
             hosts:
             - "*"
            gateways:
            - bookinfo-wildcard-gateway
            http:
            - match:
              - uri:
                  exact: /productpage
              - uri:
                  exact: /login
              - uri:
                  exact: /logout
              - uri:
                  prefix: /api/v1/products
              route:
              - destination:
                  host: productpage
                  port:
                    number: 8080

    - name: Create the virtual service
      shell: oc create -f virtualService.yml -n bookinfo

    - name: Delete productpage URL
      shell: oc delete route productpage -n bookinfo